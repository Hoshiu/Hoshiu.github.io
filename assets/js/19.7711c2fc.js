(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{635:function(t,a,s){"use strict";s.r(a);var e=s(9),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"vue2-学习总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue2-学习总结"}},[t._v("#")]),t._v(" Vue2 学习总结")]),t._v(" "),s("h2",{attrs:{id:"vue2-基本使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue2-基本使用"}},[t._v("#")]),t._v(" Vue2 基本使用")]),t._v(" "),s("h3",{attrs:{id:"computed-和-watch-区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#computed-和-watch-区别"}},[t._v("#")]),t._v(" computed 和 watch 区别")]),t._v(" "),s("p",[t._v("computed 可以缓存，即若 data 不变，则 computed 不会重新计算。")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/img/Vue/Vue2/image-20210820103340573.png"),alt:"区别"}}),t._v(" "),s("p",[t._v("computed返回的应当是一个对象：")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/img/Vue/Vue2/image-20210820105856798.png"),alt:"区别"}}),t._v(" "),s("p",[t._v("watch 默认为浅监听，即对于引用类型无法深度监听，需要添加 deep: true")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/img/Vue/Vue2/image-20210819111100237.png"),alt:"区别"}}),t._v(" "),s("p",[t._v("其中，info是一个对象")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/img/Vue/Vue2/image-20210819111156566.png"),alt:"区别"}}),t._v(" "),s("p",[t._v("使用 watch 对其进行监听时，需要写入一个 handler 函数来进行监听后的操作。")]),t._v(" "),s("p",[t._v("其实道理很简单，属于vue2.0的坑，其实就是：在变异 (不是替换) 对象或数组时，旧值将与新值相同，因为它们的引用指向同一个对象/数组。Vue 不会保留变异之前值的副本；")]),t._v(" "),s("h3",{attrs:{id:"组件通讯"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件通讯"}},[t._v("#")]),t._v(" 组件通讯")]),t._v(" "),s("h4",{attrs:{id:"父子组件通讯"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#父子组件通讯"}},[t._v("#")]),t._v(" 父子组件通讯")]),t._v(" "),s("p",[t._v("常用的如 props 和$emit，即父组件给子组件传递数据，子组件向父组件触发事件。")]),t._v(" "),s("p",[t._v("例如此处在父组件中绑定list数据")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/img/Vue/Vue2/image-20210819074736512.png"),alt:"组件通讯"}}),t._v(" "),s("p",[t._v("然后在子组件中添加 props 接收该数据即可。")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/img/Vue/Vue2/image-20210819074839300.png"),alt:"组件通讯"}}),t._v(" "),s("p",[t._v("同时在子组件中调用父组件在使用子组件时绑定的事件。")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/img/Vue/Vue2/image-20210819075449642.png"),alt:"组件通讯"}}),t._v(" "),s("h4",{attrs:{id:"自定义事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义事件"}},[t._v("#")]),t._v(" 自定义事件")]),t._v(" "),s("p",[t._v("自定义事件可以在许多情况中使用，不会只限制在父子组件/兄弟组件中。")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/img/Vue/Vue2/image-20210819075159003.png"),alt:"自定义事件"}}),t._v(" "),s("p",[t._v("如图，在这里创建一个名为 'onAddTitle' 的自定义事件，每次触发该事件时执行第二个参数中的函数。")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/img/Vue/Vue2/image-20210819075359140.png"),alt:"自定义事件"}}),t._v(" "),s("p",[t._v("在另一组件中触发该自定义事件，第二个参数为传递过去的参数。")]),t._v(" "),s("h3",{attrs:{id:"生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[t._v("#")]),t._v(" 生命周期")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cn.vuejs.org/images/lifecycle.png",alt:"https://cn.vuejs.org/images/lifecycle.png"}})]),t._v(" "),s("p",[t._v("在父子组件中，调用顺序遵从“从外到内，再从内到外，mixins先于组件”的原则。")]),t._v(" "),s("h3",{attrs:{id:"vue-高级特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-高级特性"}},[t._v("#")]),t._v(" vue 高级特性")]),t._v(" "),s("h4",{attrs:{id:"如何自己实现-v-model"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何自己实现-v-model"}},[t._v("#")]),t._v(" 如何自己实现 v-model")]),t._v(" "),s("p",[t._v("用于双向绑定表单元素，与 v-bind 类似，子组件中定义 props，")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/img/Vue/Vue2/image-20210819082104481.png"),alt:"v-model"}}),t._v(" "),s("p",[t._v("而在父组件中，仅仅使用了 v-model即可。")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/img/Vue/Vue2/image-20210819082214428.png"),alt:"v-model"}}),t._v(" "),s("h4",{attrs:{id:"nexttick"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nexttick"}},[t._v("#")]),t._v(" $nextTick")]),t._v(" "),s("p",[t._v("Vue 是一个异步渲染的框架，即 data 改变之后，dom 不会立刻渲染，而是异步进行渲染。")]),t._v(" "),s("p",[t._v("因此想要在 dom 改变之后立刻获取到其中的数据，需要调用 $nextTick，它会在 dom 渲染之后被触发，以获取最新 dom 节点。")]),t._v(" "),s("h4",{attrs:{id:"slot"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#slot"}},[t._v("#")]),t._v(" slot")]),t._v(" "),s("p",[t._v("可以帮助父组件往子组件中插入一些内容。")]),t._v(" "),s("p",[t._v("在父组件中调用子组件，同时动态绑定 url")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/img/Vue/Vue2/image-20210819085512988.png"),alt:"slot"}}),t._v(" "),s("p",[t._v("子组件内容如下，由于父组件中已经写入了数据，因此子组件中默认的 slot 不会执行，她只会在父组件没有内容写入时默认显示。")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/img/Vue/Vue2/image-20210819085533717.png"),alt:"slot"}}),t._v(" "),s("h5",{attrs:{id:"具名插槽"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#具名插槽"}},[t._v("#")]),t._v(" 具名插槽")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/img/Vue/Vue2/image-20210819090812766.png"),alt:"slot"}}),t._v(" "),s("h5",{attrs:{id:"作用域插槽"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作用域插槽"}},[t._v("#")]),t._v(" 作用域插槽")]),t._v(" "),s("p",[t._v("较为高级的用法为作用域插槽，此时父组件可以获取子组件中的数据。")]),t._v(" "),s("p",[t._v("首先在子组件中定义一个动态属性 slotData")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/img/Vue/Vue2/image-20210819090436823.png"),alt:"slot"}}),t._v(" "),s("p",[t._v("在父组件中进行调用，格式进行如下更改")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/img/Vue/Vue2/image-20210819090536610.png"),alt:"slot"}}),t._v(" "),s("p",[t._v("v-slot 中定义的 slotProps 名字不唯一，可以是任意名字。")]),t._v(" "),s("h4",{attrs:{id:"动态组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态组件"}},[t._v("#")]),t._v(" 动态组件")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/img/Vue/Vue2/image-20210819091722853.png"),alt:"动态组件"}}),t._v(" "),s("p",[t._v("使用格式如下")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/img/Vue/Vue2/image-20210819091758574.png"),alt:"slot"}}),t._v(" "),s("h4",{attrs:{id:"异步组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步组件"}},[t._v("#")]),t._v(" 异步组件")]),t._v(" "),s("p",[t._v("import() 函数")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/img/Vue/Vue2/image-20210819092913682.png"),alt:"异步组件"}}),t._v(" "),s("p",[t._v("该组件只会在被使用的时候才被加载，可以提升性能。  即按需加载，异步加载大组件")]),t._v(" "),s("h4",{attrs:{id:"keep-alive"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#keep-alive"}},[t._v("#")]),t._v(" keep-alive")]),t._v(" "),s("p",[t._v("用来缓存组件，在需要频繁切换的组件之中且不需要重复渲染时使用，亦可用于性能优化。")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/img/Vue/Vue2/image-20210819100421311.png"),alt:"keep-alive"}}),t._v(" "),s("h4",{attrs:{id:"使用-mixin-抽离公共逻辑"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-mixin-抽离公共逻辑"}},[t._v("#")]),t._v(" 使用 mixin 抽离公共逻辑")]),t._v(" "),s("p",[t._v("多个组件见公用相同的逻辑，则将其写入mixin，将公共的部分抽离，之后每个组件复用即可。")]),t._v(" "),s("h4",{attrs:{id:"vuex"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vuex"}},[t._v("#")]),t._v(" Vuex")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://vuex.vuejs.org/vuex.png",alt:"https://vuex.vuejs.org/vuex.png"}})]),t._v(" "),s("p",[t._v("只有 Actions 中能够进行异步操作，Mutations 是原子操作。因此 Actions 中可能会整合一个或多个 Mutations 的 Commit 操作。")]),t._v(" "),s("h4",{attrs:{id:"vue-router"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-router"}},[t._v("#")]),t._v(" Vue-Router")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/img/Vue/Vue2/image-20210819105738754.png"),alt:"router"}}),t._v(" "),s("img",{attrs:{src:t.$withBase("/img/Vue/Vue2/image-20210819105812289.png"),alt:"router"}}),t._v(" "),s("img",{attrs:{src:t.$withBase("/img/Vue/Vue2/image-20210819110314158.png"),alt:"router"}}),t._v(" "),s("h2",{attrs:{id:"vue-原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-原理"}},[t._v("#")]),t._v(" Vue 原理")]),t._v(" "),s("h3",{attrs:{id:"组件化基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件化基础"}},[t._v("#")]),t._v(" 组件化基础")]),t._v(" "),s("h4",{attrs:{id:"mvvm模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mvvm模型"}},[t._v("#")]),t._v(" MVVM模型")]),t._v(" "),s("p",[t._v("数据驱动视图（MVVM，setState）")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20190218151740267.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzYxNTkx,size_16,color_FFFFFF,t_70",alt:"vue中MVVM的体现"}})]),t._v(" "),s("img",{staticStyle:{zoom:"150%"},attrs:{src:"https://img-blog.csdnimg.cn/20190218151600647.jpeg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzYxNTkx,size_16,color_FFFFFF,t_70",alt:"MVVM模型图示"}}),t._v(" "),s("h3",{attrs:{id:"vue-响应式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-响应式"}},[t._v("#")]),t._v(" Vue 响应式")]),t._v(" "),s("h4",{attrs:{id:"核心api-object-defineproperty"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#核心api-object-defineproperty"}},[t._v("#")]),t._v(" 核心API - Object.defineProperty")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty"),s("OutboundLink")],1)]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 触发更新视图")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateView")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'视图更新'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重新定义数组原型")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" oldArrayProperty "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建新对象，原型指向 oldArrayProperty ，再扩展新的方法不会影响原型")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arrProto "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldArrayProperty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'push'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pop'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'shift'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'unshift'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'splice'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("methodName")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    arrProto"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("methodName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateView")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 触发视图更新")]),t._v("\n        oldArrayProperty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("methodName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("arguments"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Array.prototype.push.call(this, ...arguments)")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重新定义属性，监听起来")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineReactive")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 深度监听")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("observer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 核心 API")]),t._v("\n    Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" value\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newValue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 深度监听")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("observer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置新值")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意，value 一直在闭包中，此处设置完之后，再 get 时也是会获取最新的值")]),t._v("\n                value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newValue\n\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 触发更新视图")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateView")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 监听对象属性")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("observer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("target")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" target "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'object'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" target "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不是对象或数组")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" target\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 污染全局的 Array 原型")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Array.prototype.push = function () {")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     updateView()")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     ...")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// }")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arrProto\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重新定义各个属性（for in 也可以遍历数组）")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" key "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineReactive")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 准备数据")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zhangsan'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    age"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    info"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        address"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'北京'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 需要深度监听")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    nums"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 监听数据")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("observer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 测试")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// data.name = 'lisi'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// data.age = 21")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// // console.log('age', data.age)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// data.x = '100' // 新增属性，监听不到 —— 所以有 Vue.set")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// delete data.name // 删除属性，监听不到 —— 所有已 Vue.delete")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// data.info.address = '上海' // 深度监听")]),t._v("\ndata"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 监听数组")]),t._v("\n")])])]),s("img",{attrs:{src:t.$withBase("/img/Vue/Vue2/image-20210819142818854.png"),alt:"响应式"}}),t._v(" "),s("h3",{attrs:{id:"虚拟-virtual-dom-dom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#虚拟-virtual-dom-dom"}},[t._v("#")]),t._v(" 虚拟 （Virtual DOM）DOM")]),t._v(" "),s("p",[t._v("DOM 操作非常耗费性能，因此使用 JS 模拟 DOM 结构，计算出最小的变更来操作 DOM。")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/img/Vue/Vue2/image-20210819145439404.png"),alt:"虚拟dom"}}),t._v(" "),s("p",[t._v("render函数 => h函数生成一个 vnode，如果有更新则通过 "),s("strong",[t._v("patch")]),t._v(" 函数更新 vnode，没有更新则直接渲染。")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/img/Vue/Vue2/image-20210819153611037.png"),alt:"虚拟dom"}}),t._v(" "),s("h3",{attrs:{id:"diff-算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#diff-算法"}},[t._v("#")]),t._v(" diff 算法")]),t._v(" "),s("p",[t._v("两棵树之间做 diff 的时间复杂度是 O(n^3)，因此普通方法是不能使用的，需要优化算法。")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/img/Vue/Vue2/image-20210819154438874.png"),alt:"diff"}}),t._v(" "),s("img",{attrs:{src:t.$withBase("/img/Vue/Vue2/image-20210819154735209.png"),alt:"diff"}}),t._v(" "),s("img",{attrs:{src:t.$withBase("/img/Vue/Vue2/image-20210819154806952.png"),alt:"diff"}}),t._v(" "),s("h3",{attrs:{id:"模板编译"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模板编译"}},[t._v("#")]),t._v(" 模板编译")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/img/Vue/Vue2/image-20210819162308647.png"),alt:"模板编译"}}),t._v(" "),s("img",{attrs:{src:t.$withBase("/img/Vue/Vue2/image-20210819162746170.png"),alt:"模板编译"}}),t._v(" "),s("img",{attrs:{src:t.$withBase("/img/Vue/Vue2/image-20210819163324873.png"),alt:"模板编译"}}),t._v(" "),s("p",[t._v("其中，_c 代表 createElement，实际上就是h函数；")]),t._v(" "),s("p",[t._v("​\t\t   _v代表 createTextVNode；")]),t._v(" "),s("p",[t._v("​\t\t   _s代表 toString")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/img/Vue/Vue2/image-20210819164604042.png"),alt:"模板编译"}}),t._v(" "),s("h3",{attrs:{id:"组件-渲染-更新-过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件-渲染-更新-过程"}},[t._v("#")]),t._v(" 组件 渲染/更新 过程")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/img/Vue/Vue2/image-20210819174539664.png"),alt:"更新"}}),t._v(" "),s("img",{attrs:{src:t.$withBase("/img/Vue/Vue2/image-20210819175007032.png"),alt:"更新"}}),t._v(" "),s("img",{attrs:{src:t.$withBase("/img/Vue/Vue2/image-20210819175155540.png"),alt:"更新"}}),t._v(" "),s("img",{attrs:{src:t.$withBase("/img/Vue/Vue2/image-20210819175217446.png"),alt:"更新"}}),t._v(" "),s("h3",{attrs:{id:"异步渲染"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步渲染"}},[t._v("#")]),t._v(" 异步渲染")]),t._v(" "),s("p",[t._v("通过异步操作可以汇总 data 的修改，从而做到一次性更新视图，减少了 DOM 的操作次数，提高性能。")]),t._v(" "),s("h3",{attrs:{id:"路由"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路由"}},[t._v("#")]),t._v(" 路由")]),t._v(" "),s("h4",{attrs:{id:"用-js-实现-hash-路由"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#用-js-实现-hash-路由"}},[t._v("#")]),t._v(" 用 JS 实现 hash 路由")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/img/Vue/Vue2/image-20210819180040655.png"),alt:"路由"}}),t._v(" "),s("img",{attrs:{src:t.$withBase("/img/Vue/Vue2/image-20210819191302457.png"),alt:"路由"}}),t._v(" "),s("img",{attrs:{src:t.$withBase("/img/Vue/Vue2/image-20210819192551618.png"),alt:"路由"}}),t._v(" "),s("p",[t._v("通过 onhashchange 来监听 hash的变化")]),t._v(" "),s("h4",{attrs:{id:"用-js-实现-h5-histroy-路由"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#用-js-实现-h5-histroy-路由"}},[t._v("#")]),t._v(" 用 JS 实现 H5 histroy 路由")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/img/Vue/Vue2/image-20210819193019165.png"),alt:"路由"}}),t._v(" "),s("img",{attrs:{src:t.$withBase("/img/Vue/Vue2/image-20210819194451450.png"),alt:"路由"}})])}),[],!1,null,null,null);a.default=n.exports}}]);